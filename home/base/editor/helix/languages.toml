[[language]]
name = "nix"
auto-format = true
formatter = { command = "nixfmt" }

[[language]]
name = "toml"
auto-format = true
formatter = { command = "taplo", args = ["fmt", "-"] }

[[language]]
name = "yaml"
# does not use ansible-language-server
language-servers = ["yaml-language-server"]
auto-format = true
formatter = { command = "yamlfmt", args = ["-"] }

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

# https://github.com/rust-lang/rust-analyzer/blob/master/crates/rust-analyzer/src/config.rs
[language-server.rust-analyzer.config]
inlayHints.chainingHints.enable = true
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 20
inlayHints.closureCaptureHints.enable = true
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

completion.autoimport.enable = true
# fill_arguments | add_parentheses | none
completion.callable.snippets = "none"
completion.fullFunctionSignatures.enable = true

imports.group.enable = true
imports.granularity.enforce = true
imports.granularity.group = "crate"
imports.prefix = "crate"
imports.preferPrelude = false

lens.enable = false

hover.actions.enable = false

# https://users.rust-lang.org/t/can-i-stop-vscode-rust-analyzer-from-shading-out-cfgs/58773/4
diagnostics.disabled = ["inactive-code"]

[language-server.rust-analyzer.config.cargo]
features = "all"

[language-server.rust-analyzer.config.check]
command = "clippy"
features = "all"

# Configure biome
# https://github.com/biomejs/biome/blob/main/editors/helix/manual.md
[language-server]
biome = { command = "biome", args = ["lsp-proxy"] }

[[language]]
name = "javascript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

[[language]]
name = "typescript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true
formatter = { command = "biome", args = [
  "format",
  "--stdin-file-path",
  "a.ts",
] }

[[language]]
name = "tsx"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "jsx"
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
]

[[language]]
name = "just"
auto-format = true
